<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.39">
  <actions/>
  <description>JOBMAVEN</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.1.0"/>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>node {
  stage(&apos;descargar fuente&apos;) { // for display purposes
        git &apos;https://github.com/jmpu0186/devopsdemo.git&apos;
   }
    stage(&apos;clean&apos;) { // for display purposes
     docker.image(&apos;maven:3-alpine&apos;).inside(&apos;-v /root/.m2:/root/.m2&apos;){
        sh &apos;mvn clean&apos;
     }
   }
   stage(&quot;testunit&quot;) {

                                  docker.image(&apos;maven:3-alpine&apos;).inside(&apos;-v /root/.m2:/root/.m2&apos;){
                                                sh &apos;mvn test&apos;
                                                step([$class: &apos;JacocoPublisher&apos;, testResults: &apos;**/target/surefire-reports/TEST-*.xml&apos;])
                                            }

    }
    stage(&quot;compilar&quot;){
         docker.image(&apos;maven:3-alpine&apos;).inside(&apos;-v /root/.m2:/root/.m2&apos;){
                    sh &apos;mvn package -DskipTests -Ddockerfile.skip&apos;
        }
    }

	stage (&quot;buildimage&quot;) {
	sh &quot;docker build -t demodevops:${env.BUILD_ID} -f ${WORKSPACE}/Dockerfile .&quot;
    }
    
    stage (&quot;pruebas funcionales&quot;){
		 		
			    	sh &quot;docker run --name=demodevops --network=esnet --env APP_VERSION=${env.BUILD_ID} -p 8081:8080 -d demodevops:${env.BUILD_ID}&quot;
					build job: &apos;jmetter-demo&apos;
					sh &quot;docker stop demodevops&quot;
				    sh &apos;docker rm $(docker ps -aq --filter name=demodevops)&apos;
		    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>